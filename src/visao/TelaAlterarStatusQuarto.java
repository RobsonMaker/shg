/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package visao;

import controle.ControleHospedagem;
import controle.ControleQuarto;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Hospedagem;
import modelo.Quarto;

/**
 *
 * @author aluno
 */
public class TelaAlterarStatusQuarto extends javax.swing.JDialog {

    /**
     * Creates new form TelaManutencaoQuarto
     */
    ArrayList<Quarto> listaQuartosDisponíveis = new ArrayList<>();
    ArrayList<Quarto> listaQuartosIisponíveis = new ArrayList<>();
    ControleQuarto contQuarto = new ControleQuarto();

    public TelaAlterarStatusQuarto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        tabelaDisponiveis.getColumnModel().getColumn(0).setPreferredWidth(100);
        tabelaDisponiveis.getColumnModel().getColumn(1).setPreferredWidth(50);
        tabelaDisponiveis.getColumnModel().getColumn(2).setPreferredWidth(75);

        tabelaIndisponiveis.getColumnModel().getColumn(0).setPreferredWidth(100);
        tabelaIndisponiveis.getColumnModel().getColumn(1).setPreferredWidth(50);
        tabelaIndisponiveis.getColumnModel().getColumn(2).setPreferredWidth(75);
        atualizaTabelaDisponiveis(true);
        atualizaTabelaIndisponivel(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaDisponiveis = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaIndisponiveis = new javax.swing.JTable();
        btTransferirDisponiveis = new javax.swing.JButton();
        btTransferirIndisponiveis = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btSalvar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        tfPesquisar = new javax.swing.JTextField();
        btPesquisar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(222, 178, 151));

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/statusIcone.png"))); // NOI18N
        jLabel1.setText("Alteração do Status do Quarto");

        tabelaDisponiveis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Número", "Tipo", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaDisponiveis);

        tabelaIndisponiveis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Número", "Tipo", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabelaIndisponiveis);

        btTransferirDisponiveis.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        btTransferirDisponiveis.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/seta esquerda.png"))); // NOI18N
        btTransferirDisponiveis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTransferirDisponiveisActionPerformed(evt);
            }
        });

        btTransferirIndisponiveis.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        btTransferirIndisponiveis.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/seta direta(1).png"))); // NOI18N
        btTransferirIndisponiveis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTransferirIndisponiveisActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(222, 178, 151));
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        btSalvar.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/adicionar.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });
        jPanel2.add(btSalvar);

        btCancelar.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/circulo-cruzado.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });
        jPanel2.add(btCancelar);

        tfPesquisar.setToolTipText("Pesquisa de quartos, consulta por número do quarto");
        tfPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfPesquisarKeyTyped(evt);
            }
        });

        btPesquisar.setText("Pesquisar");
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });

        jLabel2.setText("Quartos Disponíveis:");

        jLabel3.setText("Quartos Indisponíveis:");

        btSair.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btSair.setForeground(new java.awt.Color(255, 0, 0));
        btSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sair.png"))); // NOI18N
        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tfPesquisar)
                        .addGap(18, 18, 18)
                        .addComponent(btPesquisar))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btTransferirDisponiveis, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                    .addComponent(btTransferirIndisponiveis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btSair))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btPesquisar))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(btTransferirIndisponiveis, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(btTransferirDisponiveis, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(btSair))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btTransferirIndisponiveisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTransferirIndisponiveisActionPerformed
        // TODO add your handling code here:
        if (tabelaDisponiveis.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Selecione o Quarto Para Alteração de Status");
        } else {
            listaQuartosIisponíveis.add(listaQuartosDisponíveis.get(tabelaDisponiveis.getSelectedRow()));
            listaQuartosDisponíveis.remove(tabelaDisponiveis.getSelectedRow());
            atualizaTabelaDisponiveis(false);
            atualizaTabelaIndisponivel(false);
        }
    }//GEN-LAST:event_btTransferirIndisponiveisActionPerformed

    private void btTransferirDisponiveisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTransferirDisponiveisActionPerformed
        // TODO add your handling code here:

        if (tabelaIndisponiveis.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Selecione o Quarto Para Alteração de Status");
        } else {
            listaQuartosDisponíveis.add(listaQuartosIisponíveis.get(tabelaIndisponiveis.getSelectedRow()));
            listaQuartosIisponíveis.remove(tabelaIndisponiveis.getSelectedRow());
            atualizaTabelaDisponiveis(false);
            atualizaTabelaIndisponivel(false);
        }
    }//GEN-LAST:event_btTransferirDisponiveisActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        // TODO add your handling code here:
        for (Quarto QuartosDisponívei : listaQuartosDisponíveis) {
            QuartosDisponívei.setStatus("Disponível");
            contQuarto.alterar(QuartosDisponívei);
        }

        for (Quarto QuartosIisponívei : listaQuartosIisponíveis) {
            QuartosIisponívei.setStatus("Em Manutenção");
            contQuarto.alterar(QuartosIisponívei);
        }

        atualizaTabelaDisponiveis(true);
        atualizaTabelaIndisponivel(true);
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
        // TODO add your handling code here:
        if (tfPesquisar.getText().equals("")) {
            atualizaTabelaDisponiveis(true);
            atualizaTabelaIndisponivel(true);
        } else {
            listaQuartosDisponíveis.clear();
            listaQuartosIisponíveis.clear();

            for (Quarto quarto : contQuarto.listarPorNumero(Integer.valueOf(tfPesquisar.getText()))) {
                if (quarto.isStatus().equals("Disponivel")|| quarto.isStatus().equals( "Dispovível")) {
                    listaQuartosDisponíveis.add(quarto);
                } else {
                    listaQuartosIisponíveis.add(quarto);
                }
            }
            atualizaTabelaDisponiveis(false);
            atualizaTabelaIndisponivel(false);
            tfPesquisar.setText("");
        }
    }//GEN-LAST:event_btPesquisarActionPerformed

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        // TODO add your handling code here:
        dispose();
        
    }//GEN-LAST:event_btSairActionPerformed

    private void tfPesquisarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPesquisarKeyTyped
        // TODO add your handling code here:
        if (tfPesquisar.getText().equals("")) {
            atualizaTabelaDisponiveis(true);
            atualizaTabelaIndisponivel(true);
        } else {
            listaQuartosDisponíveis.clear();
            listaQuartosIisponíveis.clear();

            for (Quarto quarto : contQuarto.listarPorNumero(Integer.valueOf(tfPesquisar.getText()))) {
                if (quarto.isStatus().equals("Disponivel")|| quarto.isStatus().equals( "Dispovível")) {
                    listaQuartosDisponíveis.add(quarto);
                } else {
                    listaQuartosIisponíveis.add(quarto);
                }
            }
            atualizaTabelaDisponiveis(false);
            atualizaTabelaIndisponivel(false);
        }
    }//GEN-LAST:event_tfPesquisarKeyTyped

    private void atualizaTabelaDisponiveis(boolean flag) {
        // pega o modelo da tabela, que foi definido para 
        // a inclusão dos dados
        DefaultTableModel modelo = (DefaultTableModel) tabelaDisponiveis.getModel();

        // enquanto houver linhas na tabela
        if (flag) {
            listaQuartosDisponíveis.clear();
            listaQuartosDisponíveis.addAll(contQuarto.listarPorStatus("Disponivel"));

        }
        while (modelo.getRowCount() > 0) {
            // apaga a primeira linha
            modelo.removeRow(0);
        }
        //modelo.setNumRows(0);

        // percorre o ArrayList de salas
        for (Quarto q : listaQuartosDisponíveis) {
            // adiciona uma linha na tabela
            // o object criado tem que ter a mesma quantidade
            // de elementos que foi definida na tabela, 
            // como também os mesmos tipos
            String status;
           
            modelo.addRow(new Object[]{q.getNumero_quarto(), q.getTipo(), q.isStatus()});
        }

    }

    private void atualizaTabelaIndisponivel(boolean flag) {
        // pega o modelo da tabela, que foi definido para 
        // a inclusão dos dados
        DefaultTableModel modelo = (DefaultTableModel) tabelaIndisponiveis.getModel();

        // enquanto houver linhas na tabela
        if (flag) {
            listaQuartosIisponíveis.clear();
            listaQuartosIisponíveis.addAll(contQuarto.listarPorStatus("Em Manutenção"));
        }

        while (modelo.getRowCount() > 0) {
            // apaga a primeira linha
            modelo.removeRow(0);
        }
        //modelo.setNumRows(0);

        // percorre o ArrayList de salas
        for (Quarto q : listaQuartosIisponíveis) {
            // adiciona uma linha na tabela
            // o object criado tem que ter a mesma quantidade
            // de elementos que foi definida na tabela, 
            // como também os mesmos tipos
            String status;
            
            modelo.addRow(new Object[]{q.getNumero_quarto(), q.getTipo(), q.isStatus()});
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAlterarStatusQuarto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAlterarStatusQuarto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAlterarStatusQuarto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAlterarStatusQuarto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaAlterarStatusQuarto dialog = new TelaAlterarStatusQuarto(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btPesquisar;
    private javax.swing.JButton btSair;
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton btTransferirDisponiveis;
    private javax.swing.JButton btTransferirIndisponiveis;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabelaDisponiveis;
    private javax.swing.JTable tabelaIndisponiveis;
    private javax.swing.JTextField tfPesquisar;
    // End of variables declaration//GEN-END:variables
}
