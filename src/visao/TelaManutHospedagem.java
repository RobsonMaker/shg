/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package visao;

import controle.ControleHospedagem;
import controle.ControleItemHospedagem;
import controle.ControleProduto;
import controle.ControleQuarto;
import controle.Conversoes;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.ConsumoServico;
import modelo.Funcionario;
import modelo.Hospedagem;
import modelo.Hospede;
import modelo.ItemConsumo;
import modelo.Produto;
import modelo.Quarto;
import modelo.Servico;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.swing.JRViewer;
import util.DadosUsuario;

/**
 *
 * @author aluno
 */
public class TelaManutHospedagem extends javax.swing.JDialog {

    /**
     * Creates new form TelaManutHospedagem
     */
    Hospede h = new Hospede();
    Quarto q = new Quarto();
    private boolean editar = false;
    Conversoes con = new Conversoes();
    Hospedagem hospedagem = new Hospedagem();

    ControleHospedagem ContHospedagem = new ControleHospedagem();
    ControleQuarto contQuarto = new ControleQuarto();
    ControleProduto contProduto = new ControleProduto();
    ArrayList<ItemConsumo> listaProdutoCom = new ArrayList<>();
    ArrayList<ConsumoServico> listaServico = new ArrayList<>();
    private boolean listaAlterada = false;
    Funcionario funcionario = DadosUsuario.getFuncionario();

    public TelaManutHospedagem(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        tfHospede.setEditable(false);
        tfQuarto.setEditable(false);

        txtTotal.setEditable(false);
        atualizaTabelaProduto(true);
        atualizaTabelaServico(true);
        btImprimir.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JFormattedTextField();
        btSalvar = new javax.swing.JButton();
        txtStatus = new javax.swing.JLabel();
        tfHospede = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        dataCheckIn = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        dataCheckOut = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfQuarto = new javax.swing.JTextField();
        btPesquisarQuarto = new javax.swing.JButton();
        btPesquisarHospede = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jCFormaPagamento = new javax.swing.JComboBox<>();
        btCalcularOrcamento = new javax.swing.JButton();
        btFinalizar = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelProduto = new javax.swing.JPanel();
        btAdicionarProduto = new javax.swing.JButton();
        btRemoverProduto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTProdutos = new javax.swing.JTable();
        jPanelServiços = new javax.swing.JPanel();
        btAdicionarServico = new javax.swing.JButton();
        btRemoverServiço = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbServico = new javax.swing.JTable();
        txtDiarias = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btImprimir = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(222, 178, 151));

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/controle-de-acesso.png"))); // NOI18N
        jLabel1.setText("Controle Hospedagem");

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sair.png"))); // NOI18N
        jButton1.setText("Sair");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        jLabel8.setText("Total:");

        txtTotal.setForeground(new java.awt.Color(51, 153, 0));
        txtTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        txtTotal.setToolTipText("");
        txtTotal.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N

        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/salve-.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        txtStatus.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        txtStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtStatus.setText("Status");

        tfHospede.setMaximumSize(new java.awt.Dimension(105, 24));
        tfHospede.setMinimumSize(new java.awt.Dimension(105, 24));
        tfHospede.setPreferredSize(new java.awt.Dimension(105, 24));
        tfHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfHospedeActionPerformed(evt);
            }
        });

        jLabel2.setText("Hospede:");

        dataCheckIn.setMaximumSize(new java.awt.Dimension(105, 24));
        dataCheckIn.setMinimumSize(new java.awt.Dimension(105, 24));
        dataCheckIn.setPreferredSize(new java.awt.Dimension(105, 24));

        jLabel5.setText("Data Check-in:");

        dataCheckOut.setMaximumSize(new java.awt.Dimension(105, 24));
        dataCheckOut.setMinimumSize(new java.awt.Dimension(105, 24));
        dataCheckOut.setPreferredSize(new java.awt.Dimension(105, 24));

        jLabel6.setText("Data Prevista Check-out:");

        jLabel4.setText("Quarto:");

        tfQuarto.setMaximumSize(new java.awt.Dimension(105, 24));
        tfQuarto.setMinimumSize(new java.awt.Dimension(105, 24));
        tfQuarto.setPreferredSize(new java.awt.Dimension(105, 24));

        btPesquisarQuarto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-pesquisar-30.png"))); // NOI18N
        btPesquisarQuarto.setMaximumSize(new java.awt.Dimension(105, 24));
        btPesquisarQuarto.setMinimumSize(new java.awt.Dimension(105, 24));
        btPesquisarQuarto.setPreferredSize(new java.awt.Dimension(36, 24));
        btPesquisarQuarto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarQuartoActionPerformed(evt);
            }
        });

        btPesquisarHospede.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-pesquisar-30.png"))); // NOI18N
        btPesquisarHospede.setMaximumSize(new java.awt.Dimension(105, 24));
        btPesquisarHospede.setMinimumSize(new java.awt.Dimension(105, 24));
        btPesquisarHospede.setPreferredSize(new java.awt.Dimension(36, 24));
        btPesquisarHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarHospedeActionPerformed(evt);
            }
        });

        jLabel7.setText("Forma de Pagamento:");

        jCFormaPagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar", "Dinheiro", "Cartão", "Pix" }));

        btCalcularOrcamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-estimativa-20.png"))); // NOI18N
        btCalcularOrcamento.setText("Orçamento");
        btCalcularOrcamento.setToolTipText("Calcular o orçamento da hospedagem, isira a data de check-in, check-out e ocolha o quarto para realizar o orçamento!\n");
        btCalcularOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCalcularOrcamentoActionPerformed(evt);
            }
        });

        btFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-receber-dinheiro-32.png"))); // NOI18N
        btFinalizar.setText("Pagamento");
        btFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFinalizarActionPerformed(evt);
            }
        });

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dados de Consumo"));

        btAdicionarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-mais-2-matematica-30.png"))); // NOI18N
        btAdicionarProduto.setText("Adicionar");
        btAdicionarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarProdutoActionPerformed(evt);
            }
        });

        btRemoverProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-apagar-para-sempre-30.png"))); // NOI18N
        btRemoverProduto.setText("Remover");
        btRemoverProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverProdutoActionPerformed(evt);
            }
        });

        JTProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Produto", "Quantidade", "Preço UN"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(JTProdutos);
        if (JTProdutos.getColumnModel().getColumnCount() > 0) {
            JTProdutos.getColumnModel().getColumn(0).setResizable(false);
            JTProdutos.getColumnModel().getColumn(1).setResizable(false);
            JTProdutos.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout jPanelProdutoLayout = new javax.swing.GroupLayout(jPanelProduto);
        jPanelProduto.setLayout(jPanelProdutoLayout);
        jPanelProdutoLayout.setHorizontalGroup(
            jPanelProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProdutoLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1035, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanelProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btAdicionarProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btRemoverProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelProdutoLayout.setVerticalGroup(
            jPanelProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanelProdutoLayout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addComponent(btAdicionarProduto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btRemoverProduto)
                .addGap(108, 108, 108))
        );

        jTabbedPane1.addTab("Produtos", new javax.swing.ImageIcon(getClass().getResource("/img/consumismo.png")), jPanelProduto); // NOI18N

        btAdicionarServico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-mais-2-matematica-30.png"))); // NOI18N
        btAdicionarServico.setText("Adicionar");
        btAdicionarServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarServicoActionPerformed(evt);
            }
        });

        btRemoverServiço.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-apagar-para-sempre-30.png"))); // NOI18N
        btRemoverServiço.setText("Remover");
        btRemoverServiço.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverServiçoActionPerformed(evt);
            }
        });

        tbServico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Serviço", "Quantidade ", "Preço UN"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbServico);
        if (tbServico.getColumnModel().getColumnCount() > 0) {
            tbServico.getColumnModel().getColumn(0).setResizable(false);
            tbServico.getColumnModel().getColumn(1).setResizable(false);
            tbServico.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout jPanelServiçosLayout = new javax.swing.GroupLayout(jPanelServiços);
        jPanelServiços.setLayout(jPanelServiçosLayout);
        jPanelServiçosLayout.setHorizontalGroup(
            jPanelServiçosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelServiçosLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1035, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanelServiçosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btAdicionarServico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btRemoverServiço, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelServiçosLayout.setVerticalGroup(
            jPanelServiçosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelServiçosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btAdicionarServico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btRemoverServiço)
                .addGap(108, 108, 108))
        );

        jTabbedPane1.addTab("Serviços", new javax.swing.ImageIcon(getClass().getResource("/img/contratando.png")), jPanelServiços); // NOI18N

        txtDiarias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDiariasKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDiariasKeyTyped(evt);
            }
        });

        jLabel9.setText("Diarias:");

        btImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-impressão-30.png"))); // NOI18N
        btImprimir.setText("Imprimir Comprovante");
        btImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(428, 428, 428)
                .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tfHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btPesquisarHospede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dataCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(dataCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tfQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btPesquisarQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtDiarias)
                                .addContainerGap())))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTabbedPane1)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator1))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btCalcularOrcamento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btFinalizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btImprimir)
                .addGap(157, 157, 157))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtStatus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jCFormaPagamento, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                                    .addComponent(txtDiarias)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel6))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tfQuarto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(dataCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(btPesquisarQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btPesquisarHospede, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                            .addComponent(dataCheckIn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1)
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btFinalizar)
                    .addComponent(btCalcularOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
 public void disableButoonsConsumo(boolean f) {
        btAdicionarProduto.setEnabled(f);
        btRemoverProduto.setEnabled(f);
        btAdicionarServico.setEnabled(f);
        btRemoverServiço.setEnabled(f);
        btFinalizar.setEnabled(f);
    }

    public void setQ(Quarto q) {
        this.q = q;
        tfQuarto.setText(q.getNumero_quarto().toString());
    }
 

    public Hospedagem getHospedagem() {
        return hospedagem;
    }

    public void setHospedagem(Hospedagem hospedagem) {
        this.hospedagem = hospedagem;
    }

    private void limparCampo() {
        tfHospede.setText("");
        tfQuarto.setText("");
        jCFormaPagamento.setSelectedItem("Selecionar");
        dataCheckIn.setDate(null);
        dataCheckOut.setDate(null);

    }
// Seta as informaçoes da hospedagem na tela

    public void setEditHospedagem(Hospedagem hos) {
        tfHospede.setText(hos.getHospede().getNome());
        tfQuarto.setText(String.valueOf(hos.getQuarto().getNumero_quarto()));
        jCFormaPagamento.setSelectedItem(hos.getFormaPagamento());
        dataCheckIn.setDate(hos.getDataCheckin());
        dataCheckOut.setDate(hos.getDataCheckout());
        txtStatus.setText(hos.getStatus());
        txtDiarias.setText(String.valueOf(hos.getQtd_diaria()));
        btCalcularOrcamento.setVisible(false);
        if (hos.getStatus().equals("Aberto")) {
            btImprimir.setEnabled(false);
            txtStatus.setForeground(Color.GREEN);
        } else {
            txtStatus.setForeground(Color.red);
            btSalvar.setEnabled(false);
            btPesquisarHospede.setEnabled(false);
            btPesquisarQuarto.setEnabled(false);
            tfHospede.setEditable(false);
            tfQuarto.setEditable(false);
            dataCheckIn.setEnabled(false);
            dataCheckOut.setEnabled(false);
            jCFormaPagamento.setEditable(false);
            btAdicionarProduto.setEnabled(false);
            btRemoverProduto.setEnabled(false);
            btAdicionarServico.setEnabled(false);
            btRemoverServiço.setEnabled(false);
            btFinalizar.setEnabled(false);
            jCFormaPagamento.setEnabled(false);

        }
        q = hos.getQuarto();
        this.h = hos.getHospede();

        int qtd = hos.getQtd_diaria();
//      Calcula o valor total da hospedagem
        txtTotal.setText("R$: " + ContHospedagem.CalcularPrecoiaria(q, qtd, hos.getListaConsumoServicos(), hos.getListaItemConsumo()));

        atualizaTabelaProduto(true);
        atualizaTabelaServico(true);

        editar = true;
        dataCheckIn.setEnabled(false);

    }

    public void setEditHospedagemView(Hospedagem hos) {
        tfHospede.setText(hos.getHospede().getNome());
        tfQuarto.setText(String.valueOf(hos.getQuarto().getNumero_quarto()));
        jCFormaPagamento.setSelectedItem(hos.getFormaPagamento());
        dataCheckIn.setDate(hos.getDataCheckin());
        dataCheckOut.setDate(hos.getDataCheckout());
        txtDiarias.setText(String.valueOf(hos.getQtd_diaria()));
        txtStatus.setText(hos.getStatus());
        btCalcularOrcamento.setVisible(false);
        if (hos.getStatus().equals("Aberto")) {
            btImprimir.setEnabled(false);
            txtStatus.setForeground(Color.GREEN);
        } else {

            txtStatus.setForeground(Color.red);

        }
        q = hos.getQuarto();
        this.h = hos.getHospede();
        int qtd = hos.getQtd_diaria();

        txtTotal.setText("R$: " + ContHospedagem.CalcularPrecoiaria(q, qtd, getHospedagem().getListaConsumoServicos(), getHospedagem().getListaItemConsumo()));
        listaProdutoCom.addAll(hos.getListaItemConsumo());
        listaServico.addAll(hos.getListaConsumoServicos());
        atualizaTabelaProduto(false);
        atualizaTabelaServico(false);

        btSalvar.setEnabled(false);
        btPesquisarHospede.setEnabled(false);
        btPesquisarQuarto.setEnabled(false);
        tfHospede.setEditable(false);
        tfQuarto.setEditable(false);
        dataCheckIn.setEnabled(false);
        dataCheckOut.setEnabled(false);
        jCFormaPagamento.setEnabled(false);
        btCalcularOrcamento.setEnabled(false);
        txtDiarias.setEditable(false);
        this.hospedagem = hos;

    }

    private void atualizaTabelaProduto(boolean flag) {
        // pega o modelo da tabela, que foi definido para 
        // a inclusão dos dados
        DefaultTableModel modelo = (DefaultTableModel) JTProdutos.getModel();

        // enquanto houver linhas na tabela
        if (flag) {
            listaProdutoCom.clear();
            listaProdutoCom.addAll(getHospedagem().getListaItemConsumo());
        }

        while (modelo.getRowCount() > 0) {
            // apaga a primeira linha
            modelo.removeRow(0);
        }

        // percorre o ArrayList de salas
        for (ItemConsumo i : listaProdutoCom) {
            // adiciona uma linha na tabela
            // o object criado tem que ter a mesma quantidade
            // de elementos que foi definida na tabela, 
            // como também os mesmos tipos
            modelo.addRow(new Object[]{i.getId_Produto().getNome_produto(), i.getQuantidade(), i.getPreco()});
        }

    }

    private void atualizaTabelaServico(boolean flag) {
        // pega o modelo da tabela, que foi definido para 
        // a inclusão dos dados
        DefaultTableModel modelo = (DefaultTableModel) tbServico.getModel();

        // enquanto houver linhas na tabela
        if (flag) {
            listaServico.clear();
            listaServico.addAll(getHospedagem().getListaConsumoServicos());
        }

        while (modelo.getRowCount() > 0) {
            // apaga a primeira linha
            modelo.removeRow(0);
        }

        // percorre o ArrayList de salas
        for (ConsumoServico s : listaServico) {
            // adiciona uma linha na tabela
            // o object criado tem que ter a mesma quantidade
            // de elementos que foi definida na tabela, 
            // como também os mesmos tipos
            modelo.addRow(new Object[]{s.get_Servico().getNomeServico(), s.getQuantidade(), s.getPreco()});
        }

    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        if (!this.listaAlterada) {
            dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Você não Pode sair sem Salvar!", "Alerta", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        // TODO add your handling code here:

        if (tfHospede.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Você não Selecionou um Hospede ");
        } else if (tfQuarto.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Você não Selecionou um Quarto ");
        } else if (dataCheckIn.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Você não preencheu a data de Check-in ");
        } else if (dataCheckOut.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Você não preencheu a data de Check-out ");
        } else if (jCFormaPagamento.getSelectedItem().toString().equals("Selecionar")) {
            JOptionPane.showMessageDialog(null, "Você não preencheu a Forma de Pagamento");
        } else {
            if (con.validacaoData(con.dataToString(dataCheckIn.getDate()), con.dataToString(dataCheckOut.getDate()))) {
                JOptionPane.showMessageDialog(null, "Data Ivalida!, a Data de Check-Out deve ser posterior a Data de Check-In ", " Alerta!, Data Invalida", JOptionPane.WARNING_MESSAGE);
            } else {
                long qtd = con.diferencaDatas(con.dataToString(dataCheckIn.getDate()), con.dataToString(dataCheckOut.getDate()));
                if (hospedagem.getFuncionario() == null) {
                    hospedagem.setFuncionario(funcionario);
                } else {
                    hospedagem.setFuncionario(hospedagem.getFuncionario());
                }

                hospedagem.setHospede(this.h);
                hospedagem.setQuarto(this.q);
                hospedagem.setDataCheckin(dataCheckIn.getDate());
                hospedagem.setDataCheckout(dataCheckOut.getDate());
                hospedagem.setFormaPagamento(jCFormaPagamento.getSelectedItem().toString());
                hospedagem.setStatus("Aberto");
                hospedagem.setQtd_diaria((int) qtd);
                hospedagem.setPreco_diaria_total(ContHospedagem.CalcularPrecoiaria(this.q, (int) qtd, listaServico, listaProdutoCom));

//                System.out.println("HOSPEDAGEM>"+hosp.toString());
                if (editar) {
                    hospedagem.setListaItemConsumo(listaProdutoCom);
                    hospedagem.setListaConsumoServicos(listaServico);

                    try {

                        ContHospedagem.alterar(hospedagem);
                        listaAlterada = false;

                        JOptionPane.showMessageDialog(null, "Alterado!", "Informação", JOptionPane.INFORMATION_MESSAGE);
                        txtTotal.setText("R$: " + ContHospedagem.CalcularPrecoiaria(q, qtd, listaServico, listaProdutoCom));
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Error!", "Alerta", JOptionPane.ERROR_MESSAGE);

                    }

                } else {
                    try {
                        q.setStatus("Hospedado");
                        contQuarto.alterar(q);
                        ContHospedagem.inserir(hospedagem);
                        JOptionPane.showMessageDialog(null, "Sucesso!", "Informação", JOptionPane.INFORMATION_MESSAGE);
                        editar = true;
                        disableButoonsConsumo(true);
                        btCalcularOrcamento.setVisible(false);
                        txtStatus.setText(hospedagem.getStatus());
                        if (hospedagem.getStatus().equals("Aberto")) {
                            txtStatus.setForeground(Color.GREEN);
                        } else {

                            txtStatus.setForeground(Color.red);
                        }
                        txtTotal.setText("R$: " + ContHospedagem.CalcularPrecoiaria(q, qtd, listaServico, listaProdutoCom));
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Error!", "Alerta", JOptionPane.ERROR_MESSAGE);

                    }

                }

            }
        }


    }//GEN-LAST:event_btSalvarActionPerformed

    private void btPesquisarHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarHospedeActionPerformed
        // TODO add your handling code here:
        TelaSelecaoHospede t = new TelaSelecaoHospede(null, true);
        t.setVisible(true);

        if (t.getHospede() != null) {
            h = t.getHospede();
            tfHospede.setText(h.getNome());
        }

    }//GEN-LAST:event_btPesquisarHospedeActionPerformed

    private void btCalcularOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCalcularOrcamentoActionPerformed
        // TODO add your handling code here:
        if (tfQuarto.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Você não Selecionou um Quarto ");
        } else if (dataCheckIn.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Você não preencheu a data de Check-in ");
        } else if (dataCheckOut.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Você não preencheu a data de Check-out ");
        } else {
            long qtd = con.diferencaDatas(con.dataToString(dataCheckIn.getDate()), con.dataToString(dataCheckOut.getDate()));
            if (con.validacaoData(con.dataToString(dataCheckIn.getDate()), con.dataToString(dataCheckOut.getDate()))) {
                JOptionPane.showMessageDialog(null, "Data Ivalida!, a Data de Check-Out deve ser posterior a Data de Check-In ", " Alerta!, Data Invalida", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "O Custo da Hospegagem ficara em R$: " + ContHospedagem.CalcularPrecoiaria(q, qtd, listaServico, listaProdutoCom) + " ( Somente  o Aluguel do Quarto)", "Informação Orçamento", JOptionPane.INFORMATION_MESSAGE);
            }
        }


    }//GEN-LAST:event_btCalcularOrcamentoActionPerformed

    private void btPesquisarQuartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarQuartoActionPerformed
        // TODO add your handling code here:
        TelaSelecaoQuarto t = new TelaSelecaoQuarto(null, true);
        t.setVisible(true);

        if (t.getQuarto() == null) {

        } else {
            q = t.getQuarto();
            tfQuarto.setText(String.valueOf(q.getNumero_quarto()));

            if (dataCheckIn.getDate() == null) {

            } else {
                long qtd = con.diferencaDatas(con.dataToString(dataCheckIn.getDate()), con.dataToString(dataCheckOut.getDate()));
                txtDiarias.setText("" + qtd);
            }
        }


    }//GEN-LAST:event_btPesquisarQuartoActionPerformed

    private void tfHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfHospedeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfHospedeActionPerformed

    private void btFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFinalizarActionPerformed
        // TODO add your handling code here:
        Date data = new Date();
        TelaFinalizacaoHospedagem tela = new TelaFinalizacaoHospedagem(null, true);
        int qtd = hospedagem.getQtd_diaria();
        double total = ContHospedagem.CalcularPrecoiaria(hospedagem.getQuarto(), qtd, listaServico, listaProdutoCom);

        if (con.validacaoData(con.dataToString(data), con.dataToString(hospedagem.getDataCheckout()))) {
            hospedagem.setDataCheckout(data);
            qtd = (int) con.diferencaDatas(con.dataToString(dataCheckIn.getDate()), con.dataToString(data));
            total = ContHospedagem.CalcularPrecoiaria(hospedagem.getQuarto(), qtd, listaServico, listaProdutoCom);
            txtTotal.setText("R$: " + total);
            hospedagem.setPreco_diaria_total(total);
            dataCheckOut.setDate(data);
        }

        if (con.validacaoData(con.dataToString(dataCheckOut.getDate()), con.dataToString(data))) {
            qtd = (int) con.diferencaDatas(con.dataToString(dataCheckIn.getDate()), con.dataToString(data));

            int input = JOptionPane.showConfirmDialog(this,
                    "A Hopedagem Ainda Não Atingil a Data de Check-out,Tem certeza que dejesa Finalizar?", "Data de Check-out não Atingida",
                    JOptionPane.OK_CANCEL_OPTION);
            total = ContHospedagem.CalcularPrecoiaria(hospedagem.getQuarto(), qtd, listaServico, listaProdutoCom);

            if (input == 0) {
                hospedagem.setDataCheckout(data);
                txtTotal.setText("R$: " + total);
                hospedagem.setPreco_diaria_total(total);
                dataCheckOut.setDate(data);
                tela.setHospedagem(hospedagem);
                tela.setVisible(true);

            }

        } else {
            tela.setHospedagem(hospedagem);
            tela.setVisible(true);
        }

        if (tela.isPago()) {
            hospedagem.setStatus("Finalizado");
            txtStatus.setText("Finalizado");
            txtStatus.setForeground(Color.red);
            hospedagem.setListaConsumoServicos(listaServico);
            hospedagem.setListaItemConsumo(listaProdutoCom);
            q.setStatus("Disponivel");
            hospedagem.setQtd_diaria(qtd);
            ContHospedagem.alterar(hospedagem);
            contQuarto.alterar(q);
            ContHospedagem.alterar(hospedagem);
            disableButoonsConsumo(false);
            listaAlterada = false;
            btSalvar.setEnabled(false);
            txtTotal.setText("R$: " + hospedagem.getPreco_diaria_total());
            btImprimir.setEnabled(true);
        }

//        dispose();
    }//GEN-LAST:event_btFinalizarActionPerformed

    private void btAdicionarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarProdutoActionPerformed
        // TODO add your handling code here:
        TelaSelecaoProduto telaSP = new TelaSelecaoProduto(null, true);
        telaSP.setVisible(true);
        int qtdProduto;

        Produto p = telaSP.getProduto();
        qtdProduto = telaSP.qtdSO();
        ItemConsumo item = new ItemConsumo();
        boolean existe = false;

        if (listaProdutoCom.isEmpty() && !p.equals(null)) {

            item.setHospedagem(getHospedagem());
            item.setId_Produto(p);
            item.setQuantidade(qtdProduto);
            item.setPreco(p.getValor());
            listaProdutoCom.add(item);

            p.setQtd(p.getQtd() - qtdProduto);
            contProduto.alterar(p);
            txtTotal.setText("R$: " + ContHospedagem.CalcularPrecoiaria(q, getHospedagem().getQtd_diaria(), getHospedagem().getListaConsumoServicos(), listaProdutoCom));
            this.listaAlterada = true;

            atualizaTabelaProduto(false);
        } else {
            for (int i = 0; i < listaProdutoCom.size(); i++) {
                if (listaProdutoCom.get(i).getId_Produto().equals(p)) {

                    listaProdutoCom.get(i).setQuantidade((listaProdutoCom.get(i).getQuantidade() + qtdProduto));
                    atualizaTabelaProduto(false);
                    p.setQtd(p.getQtd() - qtdProduto);
                    contProduto.alterar(p);
                    existe = true;
                    txtTotal.setText("R$: " + ContHospedagem.CalcularPrecoiaria(q, getHospedagem().getQtd_diaria(), getHospedagem().getListaConsumoServicos(), listaProdutoCom));
                    this.listaAlterada = true;
                }

            }
            if (!existe) {
                item.setHospedagem(getHospedagem());
                item.setId_Produto(p);
                item.setQuantidade(qtdProduto);
                item.setPreco(p.getValor());
                listaProdutoCom.add(item);

                p.setQtd(p.getQtd() - qtdProduto);
                contProduto.alterar(p);

                atualizaTabelaProduto(false);
                txtTotal.setText("R$: " + ContHospedagem.CalcularPrecoiaria(q, getHospedagem().getQtd_diaria(), getHospedagem().getListaConsumoServicos(), listaProdutoCom));
                this.listaAlterada = true;
            }
        }


    }//GEN-LAST:event_btAdicionarProdutoActionPerformed

    private void btRemoverProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverProdutoActionPerformed
        // TODO add your handling code here:

        if (JTProdutos.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Selecione um Produto!", "Alerta", JOptionPane.WARNING_MESSAGE);

        } else {
            TelaExclusaoItemConsumo TX = new TelaExclusaoItemConsumo(null, true);
            ItemConsumo i = listaProdutoCom.get(JTProdutos.getSelectedRow());
            Produto p = i.getId_Produto();
            TX.setItem(i);
            TX.setVisible(true);
            TX.getQuantidade();

            if (i.getQuantidade() == TX.getQuantidade()) {
                listaProdutoCom.remove(JTProdutos.getSelectedRow());
                p.setQtd(p.getQtd() + TX.quantidade);
                contProduto.alterar(p);
                atualizaTabelaProduto(false);
                txtTotal.setText("R$: " + ContHospedagem.CalcularPrecoiaria(q, getHospedagem().getQtd_diaria(), getHospedagem().getListaConsumoServicos(), listaProdutoCom));
                this.listaAlterada = true;
            } else {
                listaProdutoCom.get(JTProdutos.getSelectedRow()).setQuantidade((listaProdutoCom.get(JTProdutos.getSelectedRow()).getQuantidade() - TX.getQuantidade()));
                p.setQtd(p.getQtd() + TX.quantidade);
                contProduto.alterar(p);
                atualizaTabelaProduto(false);
                txtTotal.setText("R$: " + ContHospedagem.CalcularPrecoiaria(q, getHospedagem().getQtd_diaria(), getHospedagem().getListaConsumoServicos(), listaProdutoCom));
                this.listaAlterada = true;
            }
        }


    }//GEN-LAST:event_btRemoverProdutoActionPerformed

    private void btAdicionarServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarServicoActionPerformed
        // TODO add your handling code here:

        TelaSelecaoServico telaSS = new TelaSelecaoServico(null, true);
        telaSS.setVisible(true);
        int qtdServico;
        Servico s = telaSS.getS();
        qtdServico = telaSS.getQtdS();
        ConsumoServico ConServiso = new ConsumoServico();
        boolean existe = false;

        if (listaServico.isEmpty() && !s.equals(null)) {
            ConServiso.setId_Hospedagem(getHospedagem());
            ConServiso.set_Servico(s);
            ConServiso.setQuantidade(qtdServico);
            ConServiso.setPreco(s.getValor());

            listaServico.add(ConServiso);

            atualizaTabelaServico(false);
            txtTotal.setText("R$: " + ContHospedagem.CalcularPrecoiaria(q, hospedagem.getQtd_diaria(), listaServico, listaProdutoCom));
            this.listaAlterada = true;
        } else {
            for (int i = 0; i < listaServico.size(); i++) {
                if (listaServico.get(i).get_Servico().equals(s)) {

                    listaServico.get(i).setQuantidade((listaServico.get(i).getQuantidade() + qtdServico));
                    existe = true;
                    atualizaTabelaServico(false);
                    txtTotal.setText("R$: " + ContHospedagem.CalcularPrecoiaria(q, hospedagem.getQtd_diaria(), listaServico, listaProdutoCom));
                    this.listaAlterada = true;
                }
            }

            if (!existe) {

                ConServiso.setId_Hospedagem(getHospedagem());
                ConServiso.set_Servico(s);
                ConServiso.setQuantidade(qtdServico);
                ConServiso.setPreco(s.getValor());

                listaServico.add(ConServiso);

                atualizaTabelaServico(false);
                txtTotal.setText("R$: " + ContHospedagem.CalcularPrecoiaria(q, getHospedagem().getQtd_diaria(), listaServico, listaProdutoCom));
                this.listaAlterada = true;
            }
        }


    }//GEN-LAST:event_btAdicionarServicoActionPerformed

    private void btRemoverServiçoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverServiçoActionPerformed
        // TODO add your handling code here:

        if (tbServico.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Selecione um Serviço!", "Alerta", JOptionPane.WARNING_MESSAGE);

        } else {
            TelaExclusaoConsumoServico TX = new TelaExclusaoConsumoServico(null, true);
            ConsumoServico s = listaServico.get(tbServico.getSelectedRow());
            TX.setServico(s);
            TX.setVisible(true);
            TX.getQuantidade();

            if (s.getQuantidade() == TX.getQuantidade()) {
                listaServico.remove(tbServico.getSelectedRow());

                atualizaTabelaServico(false);
                txtTotal.setText("R$: " + ContHospedagem.CalcularPrecoiaria(q, getHospedagem().getQtd_diaria(), listaServico, listaProdutoCom));
                this.listaAlterada = true;
            } else {
                listaServico.get(tbServico.getSelectedRow()).setQuantidade((listaServico.get(tbServico.getSelectedRow()).getQuantidade() - TX.getQuantidade()));

                atualizaTabelaServico(false);
                txtTotal.setText("R$: " + ContHospedagem.CalcularPrecoiaria(q, getHospedagem().getQtd_diaria(), listaServico, listaProdutoCom));
                this.listaAlterada = true;
            }
        }
    }//GEN-LAST:event_btRemoverServiçoActionPerformed

    private void txtDiariasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiariasKeyReleased
        // TODO add your handling code here:
        if (dataCheckIn.getDate() == null) {
            dataCheckIn.setDate(new Date());
            if (!txtDiarias.getText().equals("")) {
                dataCheckOut.setDate(con.somaDias(new Date(), Integer.valueOf(txtDiarias.getText())));
            }
        } else {

            if (!txtDiarias.getText().equals("")) {
                Date data= dataCheckIn.getDate();
                dataCheckOut.setDate(con.somaDias(data, Integer.valueOf(txtDiarias.getText())));
            }
        }


    }//GEN-LAST:event_txtDiariasKeyReleased

    private void btImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImprimirActionPerformed
        // TODO add your handling code here:
        ControleItemHospedagem contItem = new ControleItemHospedagem();
        //       System.out.println(contItem.listarPorHospedagem(hospedagem.getHospedagem
        List<ItemConsumo> lista = new ArrayList<>();
        lista.addAll(contItem.listarPorHospedagem(hospedagem.getHospedagem()));
        if (lista.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Não há consumo Para Imprimir Comprovante!", "Informação", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                // System.out.println(contHospedagem.listarPorData(jDateHospedagem.getDate()));
                // cria um objeto da classe JasperReport, ou seja, um relatÃ³rio
                // deve-se passar o caminho onde estÃ¡ o relatÃ³rio dentro do 
                // seu projeto
                JasperReport relatorioCompilado = JasperCompileManager.compileReport("src/relatorios/Relatorio_Consumo.jrxml");

                // Preencher o relatÃ³rio com uma lista de usuÃ¡rios passada como um JRBeanCollectionDataSource
                JasperPrint relatorioPreenchido = JasperFillManager.fillReport(relatorioCompilado, null,
                        new JRBeanCollectionDataSource(lista));
                System.out.println(contItem.listarPorHospedagem(hospedagem.getHospedagem()));

                // Cria um dialog para colocar o relatório dentro dele
                JDialog tela = new JDialog(this, "Relatório de Consumo de Produtos:", true);
                tela.setSize(850, 750);
                tela.setLocationRelativeTo(null);

                // criar um componente swing que contém o relatorio
                JRViewer painelRelatorio = new JRViewer(relatorioPreenchido);

                // adiciona o painel com o relatório dentro do JDialog criado
                tela.getContentPane().add(painelRelatorio);

                // tornar visÃ­vel a janela criada com o relatÃ³rio
                tela.setVisible(true);

            } catch (JRException ex) {
                Logger.getLogger(TelaRelatorios.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Erro ao gerar o relátorio.");
            }
        }

    }//GEN-LAST:event_btImprimirActionPerformed

    private void txtDiariasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiariasKeyTyped
        // TODO add your handling code here:
         char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9')
                || (c == java.awt.event.KeyEvent.VK_BACK_SPACE)
                || (c == java.awt.event.KeyEvent.VK_DELETE))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtDiariasKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaManutHospedagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaManutHospedagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaManutHospedagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaManutHospedagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaManutHospedagem dialog = new TelaManutHospedagem(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTProdutos;
    private javax.swing.JButton btAdicionarProduto;
    private javax.swing.JButton btAdicionarServico;
    private javax.swing.JButton btCalcularOrcamento;
    private javax.swing.JButton btFinalizar;
    private javax.swing.JButton btImprimir;
    private javax.swing.JButton btPesquisarHospede;
    private javax.swing.JButton btPesquisarQuarto;
    private javax.swing.JButton btRemoverProduto;
    private javax.swing.JButton btRemoverServiço;
    private javax.swing.JButton btSalvar;
    private com.toedter.calendar.JDateChooser dataCheckIn;
    private com.toedter.calendar.JDateChooser dataCheckOut;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jCFormaPagamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelProduto;
    private javax.swing.JPanel jPanelServiços;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tbServico;
    private javax.swing.JTextField tfHospede;
    private javax.swing.JTextField tfQuarto;
    private javax.swing.JTextField txtDiarias;
    private javax.swing.JLabel txtStatus;
    private javax.swing.JFormattedTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
